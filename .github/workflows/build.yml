name: Build XCC

on:
  push:
    branches: [ "master" ]
    paths:
      - '**.cc'
      - '**.h'
  pull_request:
    branches: [ "master" ]
    paths:
      - '**.cc'
      - '**.h'
  workflow_dispatch:
    inputs:
      features:
        description: "Space-separated list of key-value feature toggles"
        required: false
      omit_tests:
        description: "Omit tests"
        required: false
      tests_verbose:
        description: "Run testrunner with verbose flag"
        required: false
      tests_print_output:
        description: "Run testrunner with print output (stdout/stderr) flag"
        required: false

jobs:
  build-linux:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt install python3 cmake make wget lsb-release software-properties-common gnupg zlib1g-dev libzstd-dev libdwarf-dev

    - name: Install LLVM & Clang
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 20 all

    - name: Configure
      run: |
        ARGS=""
        if [ -n "${{ inputs.features }}" ]; then
            for feature in ${{ inputs.features }}
            do
              ARGS="$ARGS -D$feature"
            done
        fi
        
        cmake -B build -S . -G "Unix Makefiles" $ARGS
      env:
        CC: clang-20
        CXX: clang++-20
        LLVM_DIR: /usr/lib/llvm-20/lib/cmake/

    - name: Build
      run: cmake --build build --target xcc

    - name: Run tests
      run: |
        ARGS=""
        if [ -n "${{ inputs.tests_verbose }}" ]; then
            ARGS="$ARGS -v"
        fi
        if [ -n "${{ inputs.tests_print_output }}" ]; then
            ARGS="$ARGS -p"
        fi
        if [ -z "${{ inputs.omit_tests }}" ]; then
          python3 tests/testrun.py -c tests/tests.json -e build/xcc $ARGS
        else
          echo "Omit tests"
        fi

    - name: Archive executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: xcc-linux
        path: build/xcc

  build-macos:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@main

      - name: Install Dependencies
        run: brew install cmake make zstd llvm@20

      - name: Select Xcode 16.0
        run: sudo xcode-select -switch /Applications/Xcode_16.0.app

      - name: Configure
        run: |
          ARGS=""
          if [ -n "${{ inputs.features }}" ]; then
              for feature in ${{ inputs.features }}
              do
                ARGS="$ARGS -D$feature"
              done
          fi
          cmake -B build -S . -G "Unix Makefiles" $ARGS
        env:
          LLVM_DIR: /usr/local/opt/llvm/lib/cmake/

      - name: Build
        run: cmake --build build --target xcc

      - name: Run tests
        run: |
          ARGS=""
          if [ -n "${{ inputs.tests_verbose }}" ]; then
              ARGS="$ARGS -v"
          fi
          if [ -n "${{ inputs.tests_print_output }}" ]; then
              ARGS="$ARGS -p"
          fi
          if [ -z "${{ inputs.omit_tests }}" ]; then
            python3 tests/testrun.py -c tests/tests.json -e build/xcc $ARGS
          else
            echo "Omit tests"
          fi

      - name: Archive executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: xcc-macos
          path: build/xcc

